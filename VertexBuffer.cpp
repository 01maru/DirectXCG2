#include "VertexBuffer.h"

VertexBuffer::VertexBuffer(UINT sizeVB, ID3D12Device* dev, XMFLOAT3* vertices, UINT size)
{
	// 頂点バッファの設定
	heapProp.Type = D3D12_HEAP_TYPE_UPLOAD; // GPUへの転送用

	// リソース設定
	resDesc.Dimension = D3D12_RESOURCE_DIMENSION_BUFFER;
	resDesc.Width = sizeVB; // 頂点データ全体のサイズ
	resDesc.Height = 1;
	resDesc.DepthOrArraySize = 1;
	resDesc.MipLevels = 1;
	resDesc.SampleDesc.Count = 1;
	resDesc.Layout = D3D12_TEXTURE_LAYOUT_ROW_MAJOR;

	// 頂点バッファの生成
	HRESULT result = dev->CreateCommittedResource(
		&heapProp, // ヒープ設定
		D3D12_HEAP_FLAG_NONE,
		&resDesc, // リソース設定
		D3D12_RESOURCE_STATE_GENERIC_READ,
		nullptr,
		IID_PPV_ARGS(&vertBuff));

	//	GPUメモリの値書き換え
	result = vertBuff->Map(0, nullptr, (void**)&map);
	assert(SUCCEEDED(result));
	// 全頂点に対して
	for (int i = 0; i < size; i++) {
		map[i] = vertices[i]; // 座標をコピー
	}
	// 繋がりを解除
	vertBuff->Unmap(0, nullptr);

	// GPU仮想アドレス
	view.BufferLocation = vertBuff->GetGPUVirtualAddress();
	// 頂点バッファのサイズ
	view.SizeInBytes = sizeVB;
	// 頂点1つ分のデータサイズ
	view.StrideInBytes = sizeof(XMFLOAT3);
}
